name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-web:
    name: Build and Test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .versions/bun

      - run: bun install --frozen-lockfile
      - run: bun run lint

      - uses: dprint/check@v2.2
        with:
          dprint-version: 0.49.1

  build-api:
    name: Build and Test API
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - run: make api

  docker:
    name: Docker
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          cache-to: type=gha
          cache-from: type=gha
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  helm:
    name: Helm
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: kind-ci
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v3

      - uses: azure/setup-helm@v4.3.0
        with:
          version: v3.17.0

      - uses: actions/setup-python@v5.5.0
        with:
          python-version: '3.x'
          check-latest: true

      - uses: helm/chart-testing-action@v2.7.0
        with:
          version: 3.12.0
          yamale_version: 4.0.4
          yamllint_version: 1.33.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - uses: helm/kind-action@v1.12.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          version: v0.27.0
          kubectl_version: v1.32.2

      - uses: docker/build-push-action@v6
        if: steps.list-changed.outputs.changed == 'true'
        with:
          cache-from: type=gha
          tags: minecraft-manager:0.0.1-alpha
          load: true

      - name: Load image into kind
        if: steps.list-changed.outputs.changed == 'true'
        run: kind load docker-image minecraft-manager:0.0.1-alpha --name ${{ env.CLUSTER_NAME }}

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}
